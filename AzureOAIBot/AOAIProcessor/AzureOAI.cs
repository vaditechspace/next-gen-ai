/// <summary>
/// CLass for interacting with Azure OpenAI services.
/// This class is responsible for sending chat messages to the OpenAI model and retrieving responses.
/// </summary>
/// <author>Vadi Raju Parande</author>

using Azure.AI.OpenAI;
using Azure.Identity;
using OpenAI.Chat;
using System.ClientModel;

namespace AOAIProcessor
{
    public class AzureOAI
    {
        private AzureOpenAIClient _azureClient;
        private string _model;

        /// <summary>
        /// Initializes a new instance of the AzureOAI class with Azure OpenAI service URL, API key, and model name.
        /// </summary>
        /// <param name="url">The endpoint URL for the Azure OpenAI service.</param>
        /// <param name="key">The API key for authenticating with the Azure OpenAI service.</param>
        /// <param name="model">The name of the chat model to be used.</param>
        public AzureOAI(string url, string key, string model) 
        {
            _model = model;
            _azureClient = new(
                new Uri(url),
                new ApiKeyCredential(key));
        }

        /// <summary>
        /// Sends a prompt to the Azure OpenAI model and returns the response.
        /// This method creates a chat client, and retrieves the completion based on the prompt provided.
        /// </summary>
        /// <param name="prompt">The user's input message to be processed.</param>
        /// <returns>The response generated by the Azure OpenAI model as string.</returns>
        public string TalkToMe(string prompt)
        {
            string content = string.Empty;
            ChatClient chatClient = _azureClient.GetChatClient(_model);
            ChatMessage[] chatMessages = new ChatMessage[2];
            chatMessages[0] = new SystemChatMessage("You are a helpful assistant who provides a clear and concise answer to my question");
            chatMessages[1] = new UserChatMessage(prompt);
            // Assistant messages in a request represent conversation history for responses
            //new AssistantChatMessage("Arrr! Of course, me hearty! What can I do for ye?"),
            ChatCompletion completion = chatClient.CompleteChat(chatMessages);
            content = completion.Content[0].Text;
            return content;
        }
    }
}   
